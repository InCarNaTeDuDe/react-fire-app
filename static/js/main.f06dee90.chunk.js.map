{"version":3,"sources":["firebase.js","components/login/login.js","components/auth/UserContext.js","components/register/RegisterForm.js","components/auth/index.js","components/profile/profile.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Login","useState","username","password","values","setValues","handleInputChange","e","target","name","value","autoComplete","onSubmit","alert","htmlFor","onChange","required","type","UserContext","createContext","withRouter","history","useContext","isAuth","setIsAuth","initialFields","onClick","className","preventDefault","push","ProtectedRoute","Component","component","rest","render","props","to","Profile","About","App","useMemo","Provider","exact","path","RegisterForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kQAYAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKER,IAASS,YAApB,I,OCmCeC,EA/CD,WACZ,IADkB,EAKUC,mBAJN,CACpBC,SAAU,GACVC,SAAU,KAHM,mBAKXC,EALW,KAKHC,EALG,KAOZC,EAAoB,SAACC,GAAO,IAAD,EACPA,EAAEC,OAAlBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACdL,EAAU,2BACLD,GADI,kBAENK,EAAOC,MAMZ,OACE,gCACE,wCACA,uBAAMC,aAAa,MAAMC,SANL,WACtBC,MAAM,mBAKJ,UACE,uBAAOC,QAAQ,WAAf,wBACA,uBACA,uBACEJ,MAAON,EAAOF,SACdO,KAAK,WACLM,SAAUT,EACVU,UAAQ,IAEV,uBACA,uBAAOF,QAAQ,WAAf,uBACA,uBACA,uBACEG,KAAK,OACLP,MAAON,EAAOD,SACdM,KAAK,WACLO,UAAQ,EACRD,SAAUT,IAEZ,uBACA,uBACA,uBAAOW,KAAK,SAASP,MAAM,kBCzCtBQ,EAAcC,wBAAc,MCkF1BC,eA3EM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACNC,qBAAWJ,GAAjCK,EAD4B,EAC5BA,OAAQC,EADoB,EACpBA,UAGVC,EAAgB,CACpBvB,SAAU,GACVC,SAAU,IANwB,EAQRF,mBAASwB,GARD,mBAQ7BrB,EAR6B,KAQrBC,EARqB,KAU9BC,EAAoB,SAACC,GAAO,IAAD,EACPA,EAAEC,OAAlBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACdL,EAAU,2BACLD,GADI,kBAENK,EAAOC,MAmBZ,OACE,mCACGa,EACC,qCACE,8CACA,wBAAQG,QAPK,kBAAMF,GAAWD,IAO9B,uBAGF,sBAAKI,UAAU,kBAAf,UACE,gCACE,2CACA,uBAAMhB,aAAa,MAAMC,SA1BnB,SAACL,GACfA,EAAEqB,iBAKFvB,EAAUoB,GACVD,GAAU,WAER,OADAH,EAAQQ,KAAK,aACN,MAiBD,UACE,uBAAOf,QAAQ,WAAf,wBACA,uBACA,uBACEJ,MAAON,EAAOF,SACdO,KAAK,WACLM,SAAUT,EACVU,UAAQ,IAEV,uBACA,uBAAOF,QAAQ,WAAf,uBACA,uBACA,uBACEG,KAAK,OACLP,MAAON,EAAOD,SACdM,KAAK,WACLO,UAAQ,EACRD,SAAUT,IAEZ,uBACA,uBACA,uBAAOW,KAAK,SAASP,MAAM,mBAG/B,cAAC,EAAD,Y,QCzDKoB,EAfQ,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACpDV,EAAWD,qBAAWJ,GAAtBK,OAER,OACE,cAAC,IAAD,UACE,cAAC,IAAD,2BACMU,GADN,IAEEC,OAAQ,SAACC,GACP,OAAOZ,EAAS,cAACQ,EAAD,IAAgB,cAAC,IAAD,CAAUK,GAAG,aCPxCC,EAJC,WACd,OAAO,sDCMHC,EAAQ,WACZ,OAAO,4DAkCMC,MA/Bf,WAAgB,IAAD,EACetC,oBAAS,GADxB,mBACNsB,EADM,KACEC,EADF,KAEPd,EAAQ8B,mBAAQ,iBAAO,CAAEjB,SAAQC,eAAc,CAACD,EAAQC,IAE9D,OACE,eAAC,IAAD,WACE,+BACE,6BACE,cAAC,IAAD,CAAMY,GAAG,IAAT,wBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,wBAIJ,uBAIA,eAAClB,EAAYuB,SAAb,CAAsB/B,MAAOA,EAA7B,UACE,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAIX,UAAWY,IACjC,cAAC,EAAD,CAAgBD,KAAK,SAASX,UAAWM,IACzC,cAAC,EAAD,CAAgBK,KAAK,WAAWX,UAAWK,WC1BpCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f06dee90.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCw_nFjxtWvJ_mv9BrYljIt-YSNwg6Wk7Q\",\n  authDomain: \"react-app-9336c.firebaseapp.com\",\n  databaseURL: \"https://react-app-9336c-default-rtdb.firebaseio.com\",\n  projectId: \"react-app-9336c\",\n  storageBucket: \"react-app-9336c.appspot.com\",\n  messagingSenderId: \"782715162088\",\n  appId: \"1:782715162088:web:2b24e1829504fa1dfba85d\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React, { useState } from \"react\";\n\nconst Login = () => {\n  const initialFields = {\n    username: \"\",\n    password: \"\",\n  };\n  const [values, setValues] = useState(initialFields);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleUserLogin = () => {\n    alert(\"Login success!\");\n  };\n  return (\n    <div>\n      <h5>Login </h5>\n      <form autoComplete=\"off\" onSubmit={handleUserLogin}>\n        <label htmlFor=\"username\">User Name:</label>\n        <br />\n        <input\n          value={values.username}\n          name=\"username\"\n          onChange={handleInputChange}\n          required\n        />\n        <br />\n        <label htmlFor=\"password\">Password:</label>\n        <br />\n        <input\n          type=\"text\"\n          value={values.password}\n          name=\"password\"\n          required\n          onChange={handleInputChange}\n        />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { db } from \"../../firebase\";\n\nimport Login from \"../login/login\";\n\nimport { UserContext } from \"../auth/UserContext\";\n\nconst RegisterForm = ({ history }) => {\n  const { isAuth, setIsAuth } = useContext(UserContext);\n  // console.log(\"login....\");\n\n  const initialFields = {\n    username: \"\",\n    password: \"\",\n  };\n  const [values, setValues] = useState(initialFields);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const addUser = (e) => {\n    e.preventDefault();\n    // db.collection(\"users\").add({\n    //   username: values.username,\n    //   password: values.password,\n    // });\n    setValues(initialFields);\n    setIsAuth(() => {\n      history.push(\"/profile\");\n      return true;\n    });\n  };\n\n  const handleLogout = () => setIsAuth(!isAuth);\n\n  return (\n    <>\n      {isAuth ? (\n        <>\n          <p>Welcome, User</p>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      ) : (\n        <div className=\"signin__wrapper\">\n          <div>\n            <h5>Register </h5>\n            <form autoComplete=\"off\" onSubmit={addUser}>\n              <label htmlFor=\"username\">User Name:</label>\n              <br />\n              <input\n                value={values.username}\n                name=\"username\"\n                onChange={handleInputChange}\n                required\n              />\n              <br />\n              <label htmlFor=\"password\">Password:</label>\n              <br />\n              <input\n                type=\"text\"\n                value={values.password}\n                name=\"password\"\n                required\n                onChange={handleInputChange}\n              />\n              <br />\n              <br />\n              <input type=\"submit\" value=\"Register\" />\n            </form>\n          </div>\n          <Login />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(RegisterForm);\n","import React, { useContext } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { UserContext } from \"./UserContext\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const { isAuth } = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route\n        {...rest}\n        render={(props) => {\n          return isAuth ? <Component /> : <Redirect to=\"/\" />;\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\n\nconst Profile = () => {\n  return <div>Welcome to profile</div>;\n};\n\nexport default Profile;\n","import \"./App.css\";\nimport React, { useState, useMemo } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport RegisterForm from \"./components/register/RegisterForm\";\nimport ProtectedRoute from \"./components/auth\";\nimport Profile from \"./components/profile/profile\";\nimport { UserContext } from \"./components/auth/UserContext\";\n\nconst About = () => {\n  return <div>Hello from ABout Us Page</div>;\n};\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const value = useMemo(() => ({ isAuth, setIsAuth }), [isAuth, setIsAuth]);\n\n  return (\n    <Router>\n      <ul>\n        <li>\n          <Link to=\"/\">Register</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">Profile</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n\n      <hr />\n\n      {/* <button onClick={() => setIsAuth(!isAuth)}>Login</button> */}\n\n      <UserContext.Provider value={value}>\n        <Route exact path=\"/\" component={RegisterForm} />\n        <ProtectedRoute path=\"/about\" component={About} />\n        <ProtectedRoute path=\"/profile\" component={Profile} />\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}