{"version":3,"sources":["firebase.js","components/login/login.js","components/register/RegisterForm.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","withRouter","history","setUser","useContext","UserContext","initialFields","username","password","useState","values","setValues","handleInputChange","e","target","name","value","handleUserLogin","a","preventDefault","collection","where","get","querySnapshot","empty","alert","forEach","doc","exists","isLoggedIn","data","push","console","error","autoComplete","onSubmit","htmlFor","onChange","placeholder","required","type","user","addUser","addUserToDB","userObj","add","id","onClick","className"],"mappings":"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","file":"static/js/6.98f1f9b1.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCw_nFjxtWvJ_mv9BrYljIt-YSNwg6Wk7Q\",\n  authDomain: \"react-app-9336c.firebaseapp.com\",\n  databaseURL: \"https://react-app-9336c-default-rtdb.firebaseio.com\",\n  projectId: \"react-app-9336c\",\n  storageBucket: \"react-app-9336c.appspot.com\",\n  messagingSenderId: \"782715162088\",\n  appId: \"1:782715162088:web:2b24e1829504fa1dfba85d\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React, { useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { db } from \"../../firebase\";\n\nimport { UserContext } from \"../auth/UserContext\";\n\nconst Login = ({ history }) => {\n  const { setUser } = useContext(UserContext);\n\n  const initialFields = {\n    username: \"\",\n    password: \"\",\n  };\n  const [values, setValues] = useState(initialFields);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleUserLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const querySnapshot = await db\n        .collection(\"users\")\n        .where(\"username\", \"==\", values.username)\n        .where(\"password\", \"==\", values.password)\n        .get();\n\n      const existingUser = querySnapshot.empty; // Will be false or existing user\n\n      if (!existingUser) {\n        querySnapshot.forEach(function (doc) {\n          if (doc.exists) {\n            setValues(initialFields);\n            setUser({ isLoggedIn: true, ...doc.data() });\n          }\n        });\n\n        history.push(\"/profile\");\n      } else {\n        alert(\"User Not found\");\n        setValues(initialFields);\n      }\n    } catch (error) {\n      console.error(\"ERR on Login:-\", error);\n    }\n  };\n  return (\n    <div>\n      <h5>Login </h5>\n      <form autoComplete=\"off\" onSubmit={handleUserLogin}>\n        <label htmlFor=\"username\">User Name:</label>\n        <br />\n        <input\n          value={values.username}\n          name=\"username\"\n          onChange={handleInputChange}\n          placeholder=\"Enter Username\"\n          required\n        />\n        <br />\n        <label htmlFor=\"password\">Password:</label>\n        <br />\n        <input\n          type=\"text\"\n          value={values.password}\n          name=\"password\"\n          placeholder=\"Enter Password\"\n          required\n          onChange={handleInputChange}\n        />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useState, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { db } from \"../../firebase\";\n\nimport Login from \"../login/login\";\nimport { UserContext } from \"../auth/UserContext\";\n\nconst RegisterForm = ({ history }) => {\n  const { user, setUser } = useContext(UserContext);\n\n  const initialFields = {\n    username: \"\",\n    password: \"\",\n  };\n  const [values, setValues] = useState(initialFields);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const addUser = async (e) => {\n    e.preventDefault();\n\n    const querySnapshot = await db\n      .collection(\"users\")\n      .where(\"username\", \"==\", values.username)\n      .get();\n\n    const isNewUser = querySnapshot.empty; // empty will be true, if no record exists in DB\n\n    if (isNewUser) {\n      addUserToDB({\n        username: values.username,\n        password: values.password,\n      });\n    } else {\n      alert(\"Seems to be an exising user, Please Login!\");\n      setValues(initialFields);\n    }\n  };\n\n  async function addUserToDB(userObj) {\n    try {\n      const { id } = await db.collection(\"users\").add(userObj);\n      // Use the Users Id Generated by Firebase in Context, To use it accross all the components\n\n      const querySnapshot = await db\n        .collection(\"users\")\n        .where(\"username\", \"==\", values.username)\n        .where(\"password\", \"==\", values.password)\n        .get();\n\n      querySnapshot.forEach(function (doc) {\n        setValues(initialFields);\n        setUser({ isLoggedIn: true, id, ...doc.data() });\n      });\n\n      history.push(\"/profile\");\n    } catch (error) {\n      console.error(\"ERR on Register: \", error);\n    }\n  }\n\n  const handleLogout = () => setUser({ isLoggedIn: false });\n\n  return (\n    <>\n      {user.isLoggedIn ? (\n        <>\n          <p>Welcome, {user.username}</p>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      ) : (\n        <div className=\"signin__wrapper\">\n          <div>\n            <h5>Register </h5>\n            <form autoComplete=\"off\" onSubmit={addUser}>\n              <label htmlFor=\"username\">User Name:</label>\n              <br />\n              <input\n                value={values.username}\n                name=\"username\"\n                onChange={handleInputChange}\n                placeholder=\"Enter Username\"\n                required\n              />\n              <br />\n              <label htmlFor=\"password\">Password:</label>\n              <br />\n              <input\n                type=\"text\"\n                value={values.password}\n                name=\"password\"\n                required\n                placeholder=\"Enter Password\"\n                onChange={handleInputChange}\n              />\n              <br />\n              <br />\n              <input type=\"submit\" value=\"Register\" />\n            </form>\n          </div>\n          <Login />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(RegisterForm);\n"],"sourceRoot":""}